name: Docker Test CI

on:
  # schedule:
  #   - cron: '0 2 */1 * *' # On the 1st of every month
  push:
    branches: [ "master" ]

jobs:
  DockerBuildCI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v2.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build docker images
      run: |
        for dirname in `ls`; do
          if [ -f ${dirname}/Dockerfile ]; then
            echo "======== Build for ${dirname} ========"
            cd ${dirname} && docker build . -t ${{ secrets.DOCKER_USERNAME }}/${dirname} && cd ..
          fi
        done
    - name: Push docker images
      run: |
        for dirname in `ls`; do
          if [ -f ${dirname}/Dockerfile ]; then
            echo "======== Push for ${dirname} ========"
            docker push ${{ secrets.DOCKER_USERNAME }}/${dirname}
          fi
        done
  DockerTestCI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build docker images
      run: |
        for dirname in `ls`; do
          if [ -f ${dirname}/Dockerfile ]; then
            echo "======== Build for ${dirname} ========"
            cd ${dirname} && docker build . -t ${{ secrets.DOCKER_USERNAME }}/${dirname} && cd ..
          fi
        done
    - name: Start docker compose
      run: |
        # start network first
        cd traefik && docker compose up -d && cd ..
        for dirname in `ls`; do
          if [ -f ${dirname}/docker-compose.yml ]; then
            echo "======== Start docker-compose for ${dirname} ========"
            cd ${dirname} && docker compose up -d && cd ..
          fi
        done
        sleep 3
        ECODE=0
        for dirname in `ls`; do
          if [ -f ${dirname}/docker-compose.yml ]; then
            RSTC=$(docker inspect -f "{{.RestartCount}}" ${dirname})
            let "ECODE=$ECODE+$RSTC"
            if [ ! $RSTC=="0" ]; then
              echo "[FAIL] the RestartCount of ${dirname}" is greater than 0.
            else
              echo "[OK] the RestartCount of ${dirname}" is 0.
            fi
          fi
        done
        exit $ECODE
